package logica;

import java.util.Calendar;

import excepciones.ExisteNinioException;

public class ColeccionNiños {
	
	private Niño[] niños;
	private int tope;
	private int maximoNiños;
	private int maximoRegistros;
	
	public ColeccionNiños() {
		super();
		this.niños = null;
		this.tope = 0;
		this.maximoNiños = 0;
		this.maximoRegistros = 0;
		
	}
	
	public void configurar(int maximoNiños, int maximoRegistros) {
		this.maximoNiños = maximoNiños;
		this.maximoRegistros = maximoRegistros;
		niños = new Niño[maximoNiños];
	}
	

	public void altaNiño(Niño n) throws ExisteNinioException{
		
		//si el ni;o no esta ingresado ya en el arreglo = if(existeNinio(n)
		//crear el arreglo de registros del ninio, de tamanio maximoRegistros
		//se lo setean pasandolo como parametro al metodo setRegistros
		if(existeNinio(n.getDocumento()) == false){
			if(hayLugar() == true){
				Registro[]registros = new Registro[maximoRegistros];
				n.setRegistros(registros);
				
		niños[tope] = n;
		tope++;
		}
		}else
			throw new ExisteNinioException("Ya esta ingresado un ninio con ese documento");
	}
	
	
	public boolean existeNinio(int doc){
	boolean existe = false;
	int i = 0;

	while (!existe && i < tope) {
		if (niños[i].getDocumento() == doc) {
			existe = true;
		}
		i++;
	}
	return existe;
	}
	
	public boolean hayLugar() {
		boolean hayLugar  = false;
		if(tope != niños.length)
			hayLugar = true;
		return hayLugar;
	}
	
	public String[] listarNiños() {
		String[]Lista = new String[tope];
		for(int i = 0; i < tope; i++)
		{
			if(niños[i]!= null)
			Lista[i] = niños[i].toString() + "\n";
		}
		return Lista;
	}
	
	public void altaRegistro(Registro r, int cedulaNiño) {
	    if(existeNinio(cedulaNiño) == false)
			System.out.println("Error: El ninio no existe");
	    else
	    {
	    	Niño n = getNiño(cedulaNiño);
	    	n.agregarRegistroNiño(r);
	    }	    
		/*Si se encuentra el niño, se invoca el método de la clase niño que agrega el registro
		en la lista de registros del mismo. SI ya no hay lugar para más registros de ese niño, se
		emite otro mensaje.*/
		
		//se busca el ni;o con esa cedula
		//si el ni;o no existe, aviso error
		//sino
		//invoco el metodo de ni;o que le agrega un registro a su coleccion de registros por ej n.agregarregistroni;o(reg)
	}
	
	public Niño getNiño (int cedula){
		boolean existe = false;
		int i = 0;
		Niño n = null;

		while (!existe && i < tope) {
			if (niños[i].getDocumento() == cedula) {
				existe = true;
				n = niños[i];
			}
			i++;
		}
		return n;
	}

	
	public int cuantasConsultasAntesDe(Calendar fecha) {
		int cuantas = 0;
		return cuantas;
			
	}
	
	public boolean estaConfigurado() {
		return false;
		
	}
	
	
}
